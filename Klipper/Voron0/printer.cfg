# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v2.0. To use this config, the firmware should be compiled for the
# STM32F103 with a "28KiB bootloader". Also, select "Enable extra
# low-level configuration options" and configure "GPIO pins to set at
# micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See the example.cfg file for a description of available parameters.

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_39FFDB054246303209651057-if00

[printer]
kinematics: corexy
max_velocity: 250
max_accel: 2000
max_z_velocity: 10
max_z_accel: 30
square_corner_velocity: 5.0

[static_digital_output usb_pullup_enable]
pins: !PA14

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
step_distance: .0125
endstop_pin: ^PC0
position_endstop: 120
position_max: 120
homing_speed: 20   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
microsteps: 16
interpolate: True
run_current: .25
hold_current: .25
sense_resistor: 0.110
stealthchop_threshold: 500

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
step_distance: .0125
endstop_pin: ^PC1
position_endstop: 120
position_max: 120
homing_speed: 20   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
microsteps: 16
interpolate: True
run_current: .25
hold_current: .25
sense_resistor: 0.110
stealthchop_threshold: 500

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
step_distance: .0025
endstop_pin: ^PC2
position_endstop: 0
position_max: 120
position_min: -1
homing_speed: 10   #Max 100
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
microsteps: 16
interpolate: True
run_current: .25
hold_current: 0.25
sense_resistor: 0.110
stealthchop_threshold: 500


[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD2
step_distance: .0024
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: -250
max_temp: 270
min_extrude_temp: 170
max_extrude_only_distance: 780.0
max_extrude_cross_section: .8
Pressure_advance: 0.0
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
microsteps: 16
interpolate: True
run_current: 0.2
hold_current: 0.2
sense_resistor: 0.110
stealthchop_threshold: 500

[heater_bed]
heater_pin: PC9
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PC3
smooth_time: 3.0
max_power: 1.0
control: pid
min_temp: -250
max_temp: 120
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769


[heater_fan hotend_fan]
# Hotend Fan
pin: PC7
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
#If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[fan]
# Print Cooling Fan - XYE board, Fan Pin
pin: PC6
zero_offset: 0.25

[neopixel caselight]
pin: PA8
#   The pin connected to the neopixel. This parameter must be
#   provided.
chain_count: 8
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order_GRB: True
#   Set the pixel order to green, red, blue. If using the WS2811 chip
#   (in 800Khz mode) then set this to False. The default is True.
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The default for each color is 0.

[idle_timeout]
timeout: 1800

[bed_screws]
screw1: 60,5
screw1_name: Front Center 
screw2: 5,115
screw2_name: Rear Left
screw3: 115,115
screw3_name: Rear Right

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5, EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB15, EXP1_10=<5V>
    
# See the sample-lcd.cfg file for definitions of common LCD displays.

[gcode_macro lights]
default_parameter_NAME: caselight
default_parameter_R: 0
default_parameter_G: 0
default_parameter_B: 0
default_parameter_I: 0
default_parameter_T: 1
gcode:
    {% if I|int == 0 %}
    SET_LED LED={NAME} RED={R|float / 255} GREEN={G|float / 255} BLUE={B|float / 255} TRANSMIT={T}
    {% else %}
    SET_LED LED={NAME} RED={R|float / 255} GREEN={G|float / 255} BLUE={B|float / 255} INDEX={I} TRANSMIT={T}
    {% endif %}

[gcode_macro strobe]
default_parameter_NAME: caselight
default_parameter_R: 50
default_parameter_G: 50
default_parameter_B: 50
default_parameter_N: 8
default_parameter_T: 5
default_parameter_S: 100
gcode:
    {% set direction = 1 %}
    {% for i in range(((T|int * 1000) / S|int)|int) %}
        {% set direction = 1 %}
        {% if (i / N|int)|int % 2 == 1 %}
            {% set direction = -1 %}
        {% endif %}
        {% set index = (i % N|int) + 1 %}
        {% for p in range(1, N|int + 1) %}
            {% if p == N|int %}
                {% set transmit = 1 %}
            {% else %}
                {% set transmit = 0 %}
            {% endif %}
            {% set curIndex = index %}
            {% if direction == -1 %}
                {% set curIndex = (N|int + 1) - index %}
            {% endif %}
            {% if curIndex == p %}
                LIGHTS NAME={NAME} R={R} G={G} B={B} I={p} T={transmit}
            {% else %}
                {% set level = 1.0 - (0.33 * ((curIndex - p)|abs + 1)) %}
                {% if level < 0 %}
                    {% set level = 0 %}
                {% endif %}
                LIGHTS NAME={NAME} R={R|int * level} G={G|int * level} B={B|int * level} I={p} T={transmit}
            {% endif %}
        {% endfor %}
        G4 P{S}
        {% if ((i * S|int) / 1000) % 4 == 3 %}
        M105
        {% endif %}
    {% endfor %}
    LIGHTS NAME={NAME} R=0 G=0 B=0 T=1
    
[gcode_macro PRINT]
default_parameter_MSG: ""
gcode: {printer.gcode.action_respond_info(MSG)}
