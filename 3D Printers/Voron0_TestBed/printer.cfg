# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v2.0. To use this config, the firmware should be compiled for the
# STM32F103 with a "28KiB bootloader". Also, select "Enable extra
# low-level configuration options" and configure "GPIO pins to set at
# micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See the example.cfg file for a description of available parameters.

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_39FFDB054246303209651057-if00

#[mcu uno]
#serial: /dev/serial/by-id/usb-Klipper_samd21g18a_DE04656543485051202020471D2D12FF-if00
#serial: /dev/serial/by-id/usb-Arduino__www.arduino.cc__0043_75833353035351F0E000-if00
#pin_map: arduino

[mcu display]
serial: /dev/serial/by-id/usb-Klipper_samd21g18a_77D147AC4C57535020312E34182E01FF-if00

[printer]
kinematics: none
max_velocity: 1
max_accel: 1

[idle_timeout]
timeout: 1800

######################################################################
# Fysetc Mini 12864Panel v2.1 (with neopixel backlight leds)
######################################################################

[display]
lcd_type: uc1701
cs_pin: display:PB8 ; EXP1_8 ; A6
a0_pin: display:PB9 ; EXP1_7 ; A7
rst_pin: display:PA9 ; EXP1_6 ; A5
contrast: 63
encoder_pins: ^display:PA11, ^display:PA10 ; EXP2_6, ^EXP2_8 ; A3, A2
click_pin: ^!display:PA4 ; ^!EXP1_9 ; A1
## Some micro-controller boards may require an spi bus to be specified:
#spi_bus: spi0
## Alternatively, some micro-controller boards may work with software spi:
spi_software_miso_pin: display:PA5 ;  EXP2_10 ; A9
spi_software_mosi_pin: display:PA6 ;  EXP2_5 ;  A10
spi_software_sclk_pin: display:PA7 ;  EXP2_9 ;  A8

[output_pin beeper]
pin: display:PA2 ; EXP1_10 ; A0
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1000

[neopixel display]
pin: display:PA8 ; EXP1_5 ; A4
chain_count: 3
color_order: RGB
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.4

#### MENU ####
[menu __main __shutdown]
type: command
#enable: !toolhead.is_printing
name: Power Off
gcode: {action_respond_info('action:poweroff')}


### MACROS ###

[delayed_gcode STARTUP]
initial_duration: 1
gcode: 
    LIGHTS_ALERT 
    PLAY_ALERT

[gcode_macro M300]
default_parameter_S: 1000
#   Use a default 1kHz tone if S is omitted.
default_parameter_P: 100
#   Use a 10ms duration is P is omitted.
gcode:
    SET_PIN PIN=beeper VALUE={S} 
    G4 P{P} 
    SET_PIN PIN=beeper VALUE=0
    
[gcode_macro PLAY_ALERT]
gcode:
    M300 S440 P200
    M300 S660 P250
    M300 S880 P300

[gcode_macro LIGHTS_ALERT]
gcode:
    LIGHTS NAME=display R=0 G=0 B=250
    G4 P1000
    LIGHTS NAME=display R=250 G=0 B=0
    G4 P1000
    LIGHTS NAME=display R=0 G=250 B=0
    G4 P1000
    LIGHTS NAME=display R=0  G=0 B=100 I=1
    LIGHTS NAME=display R=0  G=0 B=40  I=2
    LIGHTS NAME=display R=40 G=0 B=40  I=3
    M400
    
[gcode_macro LIGHTS_OFF]
default_parameter_NAME: caselight
default_parameter_I: 0
gcode:
    {% if I|int == 0 %}
    SET_LED LED={NAME} RED=0 GREEN=0 BLUE=0 TRANSMIT=1
    {% else %}
    SET_LED LED={NAME} RED=0 GREEN=0 BLUE=0 INDEX={I} TRANSMIT=1
    {% endif %}
    
[gcode_macro LIGHTS]
default_parameter_NAME: caselight
default_parameter_R: 0
default_parameter_G: 0
default_parameter_B: 0
default_parameter_I: 0
default_parameter_T: 1
gcode:
    {% if I|int == 0 %}
    SET_LED LED={NAME} RED={R|float / 255} GREEN={G|float / 255} BLUE={B|float / 255} TRANSMIT={T}
    {% else %}
    SET_LED LED={NAME} RED={R|float / 255} GREEN={G|float / 255} BLUE={B|float / 255} INDEX={I} TRANSMIT={T}
    {% endif %}

[gcode_macro STROBE]
default_parameter_NAME: caselight
default_parameter_R: 50
default_parameter_G: 50
default_parameter_B: 50
default_parameter_N: 8
default_parameter_T: 5
default_parameter_S: 100
gcode:
    {% for i in range(((T|int * 1000) / S|int)|int) %}
        {% set direction = 1 %}
        {% if (i / N|int)|int % 2 == 1 %}
            {% set direction = -1 %}
        {% endif %}
        {% set index = (i % N|int) + 1 %}
        {% for p in range(1, N|int + 1) %}
            {% if p == N|int %}
                {% set transmit = 1 %}
            {% else %}
                {% set transmit = 0 %}
            {% endif %}
            {% set curIndex = index %}
            {% if direction == -1 %}
                {% set curIndex = (N|int + 1) - index %}
            {% endif %}
            {% if curIndex == p %}
                LIGHTS NAME={NAME} R={R} G={G} B={B} I={p} T={transmit}
            {% else %}
                {% set level = 1.0 - (0.33 * ((curIndex - p)|abs + 1)) %}
                {% if level < 0 %}
                    {% set level = 0 %}
                {% endif %}
                LIGHTS NAME={NAME} R={R|int * level} G={G|int * level} B={B|int * level} I={p} T={transmit}
            {% endif %}
        {% endfor %}
        G4 P{S}
        {% if ((i * S|int) / 1000) % 4 == 3 %}
        M105
        {% endif %}
    {% endfor %}
    LIGHTS NAME={NAME} R=0 G=0 B=0 T=1
    M400

[gcode_macro KIT]
default_parameter_T: 10
gcode:
    PRINT MSG="Yes Michael?"
    STROBE T={T} S=100 R=100 G=0 B=0
    M400
    
[gcode_macro QUERY_SENSOR]
default_parameter_NAME: bme280 chamber
gcode: 
    PRINT MSG="GETTING SENSOR STATUS..."
    PRINT MSG=" Temperature: {"%.2f"|format(printer[NAME].temperature)} C"
    PRINT MSG=" Pressure: {"%.2f"|format(printer[NAME].pressure)} hPa"
    PRINT MSG=" Humidity: {"%.2f"|format(printer[NAME].humidity)}%"
    M400

[gcode_macro PRINT]
default_parameter_MSG: ""
gcode: {action_respond_info(MSG)}
